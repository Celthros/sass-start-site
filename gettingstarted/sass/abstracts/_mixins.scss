@use "variables" as var;

@mixin clearfix {
  &::after {
	content: "";
	display: table;
	clear: both;
  }
}

@mixin padding-x($padding-value) {
  padding-left: #{$padding-value}rem;
  padding-right: #{$padding-value}rem;
}

@mixin margin-x($margin-value) {
  margin-left: #{$margin-value}rem;
  margin-right: #{$margin-value}rem;
}

@mixin line-gradient-img($direction: "right bottom", $color1: var.$color-primary-light, $color2: var.$color-primary-dark, $image: "none", $opacity1: 0.8, $opacity2: 0.8, $size: "cover") {
  background-image: linear-gradient(
				  to #{$direction},
				  rgba($color1, $opacity1),
				  rgba($color2, $opacity2)
  ),
  url(#{$image});
  background-size: #{$size};
}

@mixin absCenter() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.25);
}

// Media Query Mixin
/*
0-600px: Phone styles
600-900px: Tablet portrait styles
900-1200px: Tablet landscape styles
1200-1800px: Desktop styles
1800px and up: Big desktop styles
 */

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
	@media only screen and (max-width: 37.5em) { // 600px
	  @content;
	}
  }

  @if $breakpoint == tab-port {
	@media only screen and (max-width: 56.25em) { // 900px
	  @content;
	}
  }

  @if $breakpoint == tab-land {
	@media only screen and (max-width: 75em) { // 1200px
	  @content;
	}
  }

  @if $breakpoint == big-desktop {
	@media only screen and (min-width: 112.5em) { // 1800px
	  @content;
	}
  }
}
